#!/bin/bash

set -x

function	msf_build()
{
	mkdir -p /home/${USER_NAME}/.msf4
	mkdir -p /home/${USER_NAME}/.bundle

	cd /opt/metasploit-framework && \
		bundle config set --local path '/opt/metasploit-framework' && \
		bundle install
}

function	msf_link()
{
	mkdir -p ${HOME}/.local/bin/
	cp -r /opt/metasploit-framework/* ${HOME}/.local/bin/
}

msf_build
msf_link

function	db_configure()
{
	psql -U postgres -c "CREATE USER ${USER_NAME} WITH PASSWORD '"${USER_PASS}"' ;"
	psql -U postgres -c "CREATE DATABASE ${DB_NAME} OWNER ${USER_NAME};"
	psql -U postgres -c "grant ALL ON DATABASE ${DB_NAME} TO ${USER_NAME};"
}
psql -U postgres -c "CREATE USER pix WITH PASSWORD 'pass' ;"
db_configure

<<EOF cat >"/home/${USER_NAME}/.msf4/database.yml"
production:
  adapter: postgresql
  database: ${DB_NAME}
  username: ${USER_NAME}
  password: ${USER_PASS}
  host: 127.0.0.1
  port: 5432
  pool: 75
  timeout: 5
EOF

PATH="${HOME}/.local/bin:${PATH}"

msfconsole -x "db_connect ${USER_NAME}:${USER_PASS}@127.0.0.1:5432/${DB_NAME}"
msfconsole -x "db_status"

if [ ${#} != "0" ]; then
	exec ${@}
else
	bash
fi
